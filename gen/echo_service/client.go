// Code generated by goa v3.1.2, DO NOT EDIT.
//
// echo-service client
//
// Command:
// $ goa gen github.com/kaito2/rest-api-sample/design

package echoservice

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Client is the "echo-service" service client.
type Client struct {
	VersionEndpoint goa.Endpoint
	EchoGetEndpoint goa.Endpoint
}

// NewClient initializes a "echo-service" service client given the endpoints.
func NewClient(version, echoGet goa.Endpoint) *Client {
	return &Client{
		VersionEndpoint: version,
		EchoGetEndpoint: echoGet,
	}
}

// Version calls the "version" endpoint of the "echo-service" service.
func (c *Client) Version(ctx context.Context) (res string, err error) {
	var ires interface{}
	ires, err = c.VersionEndpoint(ctx, nil)
	if err != nil {
		return
	}
	return ires.(string), nil
}

// EchoGet calls the "echo-get" endpoint of the "echo-service" service.
func (c *Client) EchoGet(ctx context.Context, p *EchoGetPayload) (res string, err error) {
	var ires interface{}
	ires, err = c.EchoGetEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(string), nil
}
