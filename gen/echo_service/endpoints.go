// Code generated by goa v3.0.10, DO NOT EDIT.
//
// echo-service endpoints
//
// Command:
// $ goa gen github.com/kaito2/rest-api-sample/design

package echoservice

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Endpoints wraps the "echo-service" service endpoints.
type Endpoints struct {
	EchoGet goa.Endpoint
}

// NewEndpoints wraps the methods of the "echo-service" service with endpoints.
func NewEndpoints(s Service) *Endpoints {
	return &Endpoints{
		EchoGet: NewEchoGetEndpoint(s),
	}
}

// Use applies the given middleware to all the "echo-service" service endpoints.
func (e *Endpoints) Use(m func(goa.Endpoint) goa.Endpoint) {
	e.EchoGet = m(e.EchoGet)
}

// NewEchoGetEndpoint returns an endpoint function that calls the method
// "echo-get" of service "echo-service".
func NewEchoGetEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		p := req.(*EchoGetPayload)
		return s.EchoGet(ctx, p)
	}
}
